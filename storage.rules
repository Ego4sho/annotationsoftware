rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isValidFileSize() {
      return request.resource.size <= 500 * 1024 * 1024; // 500MB limit
    }

    // Files stored in user-specific directories
    match /files/{userId}/{collectionId}/{fileName} {
      allow read, get: if isSignedIn();
      allow write: if isSignedIn() && isValidFileSize();
      allow delete: if isSignedIn() && isOwner(userId);
      
      // Allow metadata access
      allow get: if isSignedIn();
    }

    // Temporary upload directory
    match /temp/{userId}/{fileName} {
      allow read, write: if isSignedIn();
      allow delete: if isSignedIn() && isOwner(userId);
    }

    // Allow listing files in directories
    match /{allPaths=**} {
      allow list: if isSignedIn();
      // Allow metadata access for all files
      allow get: if isSignedIn();
    }
  }
} 